
#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: TEST

on:
#   schedule:
#     - cron: 0 20 * * *
      
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/test.yml'
      - 'LeanR9-x64-simple'

  watch:
    types: [started]

      
env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: main
  FIRMWARE_NAME: Lean-x64-simple
  CONFIG_FILE: Lean-x64-simple
  DIY_SH: diy.sh
  TARGET: x86
  SUBTARGET: 64
  SSH_ACTIONS: false
  Gzip_file: true
  UPLOAD_BIN_DIR: false
  UPLOAD_ZIP: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:

  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
        - name: Checkout
          uses: actions/checkout@master
          #with:
            #ref: master
            #fetch-depth: 1000000
          
        - name: Set Date
          run: |
           date=$(TZ=UTC-8 date +"%Y.%m.%d-%H%M")
           echo "name=DATE" >> $date
           
        - name: Space cleanup
          env:
            DEBIAN_FRONTEND: noninteractive
          run: |
            docker rmi `docker images -q`
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
            sudo -E apt-get update
            sudo apt-get -y install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
            sudo -E apt-get -y autoremove --purge
            sudo -E apt-get clean

            df -h

        - name: Clone source code
          run: git clone -b main --single-branch https://github.com/Lienol/openwrt openwrt
        
        - name: Update feeds
          run: cd openwrt && ./scripts/feeds update -a

        - name: Install feeds
          run: cd openwrt && ./scripts/feeds install -a

        - name: Generate configuration file
          run:  |
            cd openwrt
            make defconfig
        - name: Make download
          run: |
            cd openwrt
            make download -j8
            find dl -size -1024c -exec ls -l {} \;
            find dl -size -1024c -exec rm -f {} \;
            
        - name: Prepare artifact
          run: |
            cd openwrt
            mkdir -p ./artifact/firmware
            mkdir -p ./artifact/package
            mkdir -p ./artifact/buildinfo
            rm -rf $(find ./bin/targets/ -type d -name "packages")
            cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
            cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
            cp -rf .config ./artifact/buildinfo/config.info
            cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
            
            
        - name: Deliver buildinfo
          uses: actions/upload-artifact@v2
          with:
          name: OpenWrt_buildinfo${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: openwrt/artifact/buildinfo/
            

        
        